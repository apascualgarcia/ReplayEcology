
> cat("# ** SVD of independent replicates \n")
# ** SVD of independent replicates 

> Qc.list = list()

> for(i in 2:length(ASV.sub.rel.list)){ #replicates 1, 2, 3, 4
...   k = k+1
...   cat(paste0("# --- Final replicate: ",k,"\n"))
...   Qtmp = ASV.sub. .... [TRUNCATED] 
# --- Final replicate: 1
# RMSD between final replicate and transformed starting communities 
[1] 0.519768
# variance explained with the SVD (5 first components) 
[1] 0.12771817 0.06160059 0.05655513 0.05342444 0.04549035
# --- Final replicate: 2
# RMSD between final replicate and transformed starting communities 
[1] 0.5080724
# variance explained with the SVD (5 first components) 
[1] 0.11648964 0.07129955 0.05876598 0.05627700 0.04896332
# --- Final replicate: 3
# RMSD between final replicate and transformed starting communities 
[1] 0.5152908
# variance explained with the SVD (5 first components) 
[1] 0.13449709 0.07993913 0.06848650 0.06036763 0.04461065
# --- Final replicate: 4
# RMSD between final replicate and transformed starting communities 
[1] 0.4828561
# variance explained with the SVD (5 first components) 
[1] 0.13766934 0.06526902 0.05900780 0.05710665 0.05089892

> # .... the following was done for the representations below
> sv.df$Rep3_sv1 = (-1)*sv.df$Rep3_sv1

> sv.df$Rep3_sv2 = (-1)*sv.df$Rep3_sv2

> # ... transformed data
> cat("# SVD of transformed starting community \n")
# SVD of transformed starting community 

> ord.Prot = svd(Prot)

> variance.explained = prop.table(ord.Prot$d^2)

> cat("# variance explained with the SVD (5 first components) \n")
# variance explained with the SVD (5 first components) 

> (variance.explained[1:5])
[1] 0.13303757 0.10193577 0.08972945 0.07141152 0.05829975

> sv = as.data.frame(ord.Prot$u[, c(1,2,3,4)]) # first and second singular vector

> col_names = c("sv1", "sv2","sv3", "sv4")

> col_names = paste0("Rot_",col_names)

> colnames(sv) = col_names

> sv.df = cbind(sv.df, sv)

> colnames(sv.df) 
 [1] "Rep1_sv1" "Rep1_sv2" "Rep1_sv3" "Rep1_sv4" "Rep2_sv1" "Rep2_sv2" "Rep2_sv3" "Rep2_sv4"
 [9] "Rep3_sv1" "Rep3_sv2" "Rep3_sv3" "Rep3_sv4" "Rep4_sv1" "Rep4_sv2" "Rep4_sv3" "Rep4_sv4"
[17] "Rot_sv1"  "Rot_sv2"  "Rot_sv3"  "Rot_sv4" 

> # ... Compare if eigenvectors are in the same order are the same
> Neig = dim(sv.df)[2]

> prod = matrix(data = 0, nrow = Neig, ncol = Neig) 

> for(i in 1:Neig){
...   for(j in i:Neig){
...     prod[i, j] = sv.df[, i] %*% sv.df[, j]
...   }
... }

> colnames(prod) = colnames(sv.df)

> rownames(prod) = colnames(sv.df)

> cat("# All-against-all scalar product between left eigenvectors \n")
# All-against-all scalar product between left eigenvectors 

> options(max.print=500)

> (prod)
         Rep1_sv1     Rep1_sv2     Rep1_sv3      Rep1_sv4     Rep2_sv1      Rep2_sv2
Rep1_sv1        1 1.231654e-16 1.862659e-16 -1.040834e-17  0.730784756 -3.666830e-02
Rep1_sv2        0 1.000000e+00 1.124860e-16 -1.734723e-18  0.196334774  4.477687e-01
Rep1_sv3        0 0.000000e+00 1.000000e+00 -2.771763e-16 -0.106591134 -1.536060e-01
Rep1_sv4        0 0.000000e+00 0.000000e+00  1.000000e+00 -0.008607769  2.225479e-02
Rep2_sv1        0 0.000000e+00 0.000000e+00  0.000000e+00  1.000000000 -4.440892e-16
Rep2_sv2        0 0.000000e+00 0.000000e+00  0.000000e+00  0.000000000  1.000000e+00
Rep2_sv3        0 0.000000e+00 0.000000e+00  0.000000e+00  0.000000000  0.000000e+00
Rep2_sv4        0 0.000000e+00 0.000000e+00  0.000000e+00  0.000000000  0.000000e+00
Rep3_sv1        0 0.000000e+00 0.000000e+00  0.000000e+00  0.000000000  0.000000e+00
Rep3_sv2        0 0.000000e+00 0.000000e+00  0.000000e+00  0.000000000  0.000000e+00
Rep3_sv3        0 0.000000e+00 0.000000e+00  0.000000e+00  0.000000000  0.000000e+00
Rep3_sv4        0 0.000000e+00 0.000000e+00  0.000000e+00  0.000000000  0.000000e+00
Rep4_sv1        0 0.000000e+00 0.000000e+00  0.000000e+00  0.000000000  0.000000e+00
Rep4_sv2        0 0.000000e+00 0.000000e+00  0.000000e+00  0.000000000  0.000000e+00
Rep4_sv3        0 0.000000e+00 0.000000e+00  0.000000e+00  0.000000000  0.000000e+00
Rep4_sv4        0 0.000000e+00 0.000000e+00  0.000000e+00  0.000000000  0.000000e+00
Rot_sv1         0 0.000000e+00 0.000000e+00  0.000000e+00  0.000000000  0.000000e+00
Rot_sv2         0 0.000000e+00 0.000000e+00  0.000000e+00  0.000000000  0.000000e+00
Rot_sv3         0 0.000000e+00 0.000000e+00  0.000000e+00  0.000000000  0.000000e+00
Rot_sv4         0 0.000000e+00 0.000000e+00  0.000000e+00  0.000000000  0.000000e+00
              Rep2_sv3      Rep2_sv4    Rep3_sv1      Rep3_sv2      Rep3_sv3      Rep3_sv4
Rep1_sv1  2.930504e-02 -1.193918e-01  0.80705939 -2.549007e-01 -1.035110e-01 -1.541041e-03
Rep1_sv2 -1.653435e-03 -1.464832e-01  0.20248135  2.628399e-01  4.851145e-01 -4.500409e-01
Rep1_sv3  1.348735e-01 -1.147630e-01 -0.05706577 -1.070612e-01 -1.417109e-01 -2.208528e-01
Rep1_sv4 -1.105761e-01  3.107206e-02  0.02959252 -3.736385e-02 -6.788088e-03  2.116553e-01
Rep2_sv1  1.310970e-16 -2.038300e-16  0.75464989 -4.547305e-02  9.035962e-02  2.967765e-02
Rep2_sv2  3.450812e-18 -1.361758e-16  0.16946317  3.657135e-01  4.301372e-01 -7.852398e-02
Rep2_sv3  1.000000e+00 -2.276405e-16  0.03413380  3.814007e-01 -6.510515e-01 -4.245538e-01
Rep2_sv4  0.000000e+00  1.000000e+00  0.10662586  4.910808e-01 -3.266530e-02  4.064860e-01
Rep3_sv1  0.000000e+00  0.000000e+00  1.00000000 -1.110223e-16 -1.734723e-16 -4.033232e-17
Rep3_sv2  0.000000e+00  0.000000e+00  0.00000000  1.000000e+00  6.158268e-16 -4.575333e-17
Rep3_sv3  0.000000e+00  0.000000e+00  0.00000000  0.000000e+00  1.000000e+00  3.371869e-17
Rep3_sv4  0.000000e+00  0.000000e+00  0.00000000  0.000000e+00  0.000000e+00  1.000000e+00
Rep4_sv1  0.000000e+00  0.000000e+00  0.00000000  0.000000e+00  0.000000e+00  0.000000e+00
Rep4_sv2  0.000000e+00  0.000000e+00  0.00000000  0.000000e+00  0.000000e+00  0.000000e+00
Rep4_sv3  0.000000e+00  0.000000e+00  0.00000000  0.000000e+00  0.000000e+00  0.000000e+00
Rep4_sv4  0.000000e+00  0.000000e+00  0.00000000  0.000000e+00  0.000000e+00  0.000000e+00
Rot_sv1   0.000000e+00  0.000000e+00  0.00000000  0.000000e+00  0.000000e+00  0.000000e+00
Rot_sv2   0.000000e+00  0.000000e+00  0.00000000  0.000000e+00  0.000000e+00  0.000000e+00
Rot_sv3   0.000000e+00  0.000000e+00  0.00000000  0.000000e+00  0.000000e+00  0.000000e+00
Rot_sv4   0.000000e+00  0.000000e+00  0.00000000  0.000000e+00  0.000000e+00  0.000000e+00
            Rep4_sv1      Rep4_sv2      Rep4_sv3      Rep4_sv4     Rot_sv1       Rot_sv2
Rep1_sv1  0.55042425  6.394320e-03 -1.857770e-02 -6.963254e-03  0.59818512 -1.197374e-01
Rep1_sv2  0.17535479  2.737409e-01 -5.690953e-02 -4.468499e-02  0.21439169 -6.334182e-02
Rep1_sv3 -0.11464868 -1.491199e-01 -3.192823e-02  3.992954e-02 -0.14906973  4.068621e-02
Rep1_sv4  0.04946236  1.796380e-01 -6.577975e-02  7.547039e-02  0.03726636 -5.883436e-02
Rep2_sv1  0.63274250  1.429374e-01  3.563014e-02  2.242865e-02  0.61111196  5.367574e-03
Rep2_sv2  0.03304346  3.111125e-01  1.272513e-01  5.788444e-02  0.31482186 -3.742069e-02
Rep2_sv3 -0.08697748 -3.975773e-01 -3.596845e-01 -5.873363e-02  0.03377078  6.815558e-01
Rep2_sv4 -0.04817301  8.780880e-02  3.261692e-01  2.233602e-01  0.24654178  2.237788e-01
Rep3_sv1  0.61564425  1.032801e-01  3.833230e-02  4.721772e-02  0.70223583 -2.529168e-02
Rep3_sv2 -0.17573318  1.525709e-01  1.176940e-02  6.685094e-02  0.22475159  3.991864e-01
Rep3_sv3  0.03612007  4.812886e-01  2.078491e-01  3.271010e-02  0.11688873 -5.113904e-01
Rep3_sv4  0.03970351  9.979146e-02  3.069867e-01  1.383097e-01  0.08881356 -2.314442e-01
Rep4_sv1  1.00000000  7.147061e-16  1.517883e-17 -8.760354e-17  0.38503988 -6.713232e-02
Rep4_sv2  0.00000000  1.000000e+00 -5.529431e-17  9.757820e-17  0.23839477 -2.344941e-01
Rep4_sv3  0.00000000  0.000000e+00  1.000000e+00  5.632430e-17  0.08608254 -1.900335e-01
Rep4_sv4  0.00000000  0.000000e+00  0.000000e+00  1.000000e+00  0.03951838 -1.992796e-02
Rot_sv1   0.00000000  0.000000e+00  0.000000e+00  0.000000e+00  1.00000000  6.285662e-17
Rot_sv2   0.00000000  0.000000e+00  0.000000e+00  0.000000e+00  0.00000000  1.000000e+00
Rot_sv3   0.00000000  0.000000e+00  0.000000e+00  0.000000e+00  0.00000000  0.000000e+00
Rot_sv4   0.00000000  0.000000e+00  0.000000e+00  0.000000e+00  0.00000000  0.000000e+00
               Rot_sv3       Rot_sv4
Rep1_sv1  3.091184e-01  9.451508e-02
Rep1_sv2 -1.657930e-01 -1.377544e-01
Rep1_sv3  3.369125e-01  3.173185e-01
Rep1_sv4 -6.874717e-02  2.680461e-02
Rep2_sv1  1.411906e-02  1.672260e-02
Rep2_sv2 -2.079934e-01 -1.311425e-01
Rep2_sv3  1.676207e-01 -6.067548e-02
Rep2_sv4 -3.206457e-01  3.449470e-02
Rep3_sv1  6.206528e-02  3.287557e-02
Rep3_sv2 -3.500831e-01 -5.157738e-02
Rep3_sv3 -2.842306e-01 -8.073005e-02
Rep3_sv4 -2.582597e-01  1.713021e-01
Rep4_sv1  1.841599e-03  6.729797e-02
Rep4_sv2 -1.938297e-01 -4.245989e-02
Rep4_sv3 -1.029343e-01  5.856815e-02
Rep4_sv4 -1.054555e-01 -2.641642e-02
Rot_sv1  -2.610217e-16 -8.126095e-17
Rot_sv2   5.859029e-16  9.870306e-17
Rot_sv3   1.000000e+00  4.023474e-16
Rot_sv4   0.000000e+00  1.000000e+00

> sink() # end sink
